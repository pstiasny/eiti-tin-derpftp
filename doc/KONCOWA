Budowanie projektu
==================

W celu skompilowania plików binarnych należy użyć polecenia

    make

Aby uruchomić testy dla projektu:

    make test

Scenariusze testowe są opisane w skrypcie tests/test.sh.


Uruchamianie serwera
====================

    bin/derpftpd [<adres serwera> <port>]


Uruchomienie interaktywnego klienta testowego
=============================================

W skład projektu wchodzi interaktywny klient testowy.  Aby go uruchomić,
należy użyć polecenia

    bin/testclient [<adres lub nazwa serwera>:<port>]

Klient przyjmuje na standardowym wejściu następujące polecenia:

    open <ścieżka>
        Otwarcie pliku

    write <lokalna ścieżka> <długość>
        Zapis długość bajtów pobranych z podanego lokalnego pliku.

    read <lokalna ścieżka> <długość>
        Pobranie długość bajtów do podanego lokalnego pliku.

    lseek <offset> <whence>
        Analogicznie do podanego poniżej interfejsu funkcji fs_lseek.

    close
        Zamknięcie otwartego przez open pliku.
        
    fstat
        Pobiera wybrane informacje o pliku.

Klient dla każdej komendy wypisuje na standardowe wyjście wartości zwrócone
prez odpowiednie funkcje biblioteki klienta.


Interfejs biblioteki klienta
============================

Funkcje klienta udostępniane są w statycznie dołaczanej bibliotece
lib/libderpftp.a.  Nagłówki dla tej biblioteki znajdują się w pliku
include/fs_server.h.

Poniżej dokumentacja zdefiniowanych w nagłówku funkcji:


int fs_open_server(const char *server_addr)

OPIS
    Otwiera połączenie z serwerem o adresie server_addr.
    Parametr jest ciągiem znaków o postaci

        <nazwa lub adres hosta>[:<port>]

    gdzie port to domyślnie 1337.

ZWRACANA WARTOŚĆ
    Jeśli nawiązanie z serwerem powiodło się, funkcja zwaraca
    deskryptor serwera: liczbę większą lub równą 0.

    W przypadku niepowodzenia zwracany jest jeden z kodów błędów:

    FSE_CON_LIMIT       Przekroczono liczbę jednoczesnych połączeń
                        obsługiwanych przez bibliotekę.

    FSE_UNKNOWN_HOST    Nie udało się znaleźć hosta o podanej nazwie.

    FSE_CON_ERROR       Wystąpił błąd podczas nawiązywania połączenia.
                        Zmienna errno została ustawiona na odpowiedni
                        deskryptor błędu.


int fs_close_server(int server_handle)

OPIS
    Zamyka połączenie z serwerem.  Argumentem jest deskryptor serwera.
    Po wywołaniu tej funkcji deskryptor serwera traci ważność.

ZWRACANA WARTOŚĆ
    FSE_OK              Poprawnie zamknięto połączenie.

    FSE_INVALID_HANDLE  Przekazany deskryptor jest nieważny.

    FSE_CON_ERROR       Wystąpił błąd przy próbie zamknięcia połączenia.
                        Zmienna errno została ustawiona na odpowiedni
                        deskryptor błędu.


int fs_open(int server_handle, const char *name, int flags)

OPIS
    Otwiera plik o nazwie name na serwerze.  Argument flags
    odpowiada flagom polecenia open standardu POSIX.

ZWRACANA WARTOŚĆ
    Jeśli udało się otworzyć plik, zwracany jest nieujemny deskryptor
    pliku.  W przeciwnym razie zwaracany jest jeden z kodów błedów:

    FSE_INVALID_HANDLE  Przekazany deskryptor jest nieważny.

    FSE_CON_ERROR       Wystąpił błąd przy próbie zamknięcia połączenia.
                        Zmienna errno została ustawiona na odpowiedni
                        deskryptor błędu.

    FSE_FAIL            Operacja nie powiodła się po stronie serwera.
                        Zmienna errno została ustawiona na deskryptor
                        błędu podany przez serwer.


int fs_write(int server_handle, int fd, void *buf, size_t len)

OPIS
    Pisze len bajtów z bufora wskazywanego przez buf do zdalnego 
    deskryptora pliku fd uzyskanego za pomocą fs_open.
    Funkcja gwarantuje zapisanie całego bufora o ile nie wystąpi
    bład po stronie serwera.

ZWRACANA WARTOŚĆ
    Jeśli udało się pisać do pliku, zwracana jest liczba zapisanych
    bajtów.  W przeciwnym razie zwaracany jest jeden z kodów błedów:

    FSE_INVALID_HANDLE  Przekazany deskryptor jest nieważny.

    FSE_CON_ERROR       Wystąpił błąd przy próbie zamknięcia połączenia.
                        Zmienna errno została ustawiona na odpowiedni
                        deskryptor błędu.

    FSE_FAIL            Operacja nie powiodła się po stronie serwera.
                        Zmienna errno została ustawiona na deskryptor
                        błędu podany przez serwer.



int fs_read(int server_handle, int fd, void *buf, size_t len)

OPIS
    Czyta nie więcej niż len bajtów ze zdalnego deskryptora pliku uzyskanego za
    pomocą fs_open do bufora buf.

ZWRACANA WARTOŚĆ
    Jeśli pobranie bufora powiodło się, zwracana jest liczba odczytanych
    bajtów.  Liczba ta może być mniejsza niż len jeśli ilość danych pozostałych
    do odczytu jest mniejsza niż len lub len jest większe niż 10240 bajtów.

    FSE_INVALID_HANDLE  Przekazany deskryptor jest nieważny.

    FSE_CON_ERROR       Wystąpił błąd przy próbie zamknięcia połączenia.
                        Zmienna errno została ustawiona na odpowiedni
                        deskryptor błędu.

    FSE_FAIL            Operacja nie powiodła się po stronie serwera.
                        Zmienna errno została ustawiona na deskryptor
                        błędu podany przez serwer.

    FSE_INVALID_RESP    Otrzymana od serwera odpowiedź jest niezgodna
                        z protokołem.


int fs_lseek(int server_handle, int fd, long offset, int whence)

OPIS
    Przesuwa wskaźnik odczytu/zapisu pliku dla zdalnego deskryptora
    pliku fd.  W zależności od warości whence:

    0                   Wskaźnik zostanie przesunięty na pozycję
                        offset od początku pliku.

    1                   Wskaźnik zostanie przesunięty o offset
                        względem bieżącej pozycji.

    2                   Wskaźnik zostanie przesunięty o offset
                        względem końca pliku.

ZWRACANA WARTOŚĆ
    Aktualna pozycja w pliku lub kod błędu:

    FSE_INVALID_HANDLE  Przekazany deskryptor jest nieważny.

    FSE_FAIL            Operacja nie powiodła się po stronie serwera.
                        Zmienna errno została ustawiona na deskryptor
                        błędu podany przez serwer.


int fs_close(int server_handle, int fd)

OPIS
    Zamknięcie zdalnego deskryptora pliku fd.  Po wywołaniu tej funkcji
    deskryptor pliku staje się nieważny.

ZWRACANA WARTOŚĆ
    FSE_OK              Plik został zamknięty poprawnie.

    FSE_INVALID_HANDLE  Przekazany deskryptor jest nieważny.

    FSE_FAIL            Operacja nie powiodła się po stronie serwera.
                        Zmienna errno została ustawiona na deskryptor
                        błędu podany przez serwer.


int fs_fstat(int server_handle, int fd, struct stat *buf)

OPIS
    Pobranie wybranych informacji o pliku i zapisanie ich w strukturze stat.

    Parametry zapisywane w strukturze stat:
    st_mode             tryb pliku
    st_size             rozmiar pliku
    st_atim             czas ostatniego dostępu do pliku
    st_mtim             czas ostatniej modyfikacji pliku
    st_ctim             czas ostatniej zmiany statusu pliku
    st_blocks           liczba bloków
    st_blksize          rozmiar bloku

ZWRACANA WARTOĹšÄ†
    FSE_OK              Funkcja fstat została wykonana poprawnie.

    FSE_INVALID_HANDLE  Przekazany deskryptor jest nieważny.

    FSE_FAIL            Operacja nie powiodła się po stronie serwera.
                        Zmienna errno została ustawiona na deskryptor
                        błędu podany przez serwer.
